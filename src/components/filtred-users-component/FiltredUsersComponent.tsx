import {type FC, memo, useCallback, useMemo} from 'react';
import type {IUser} from "../../models/IUser.ts";
import UserComponent from "../user-component/UserComponent.tsx";

type UsersFilterProps = {
    users: IUser[],
    searchName: string
}


const FiltredUsersComponent:FC<UsersFilterProps> = ({users, searchName}) => {
    // –§—ñ–ª—Ç—Ä—É—î–º–æ —é–∑–µ—Ä—ñ–≤
    // –í–ò–∫–æ—Ä–∏—Å—Ç–∞–≤ useMemo –Ω–∞ —Ñ—ñ–ª—å—Ç—Ä—ñ, –≤—ñ–¥–ø—Ä–∞—Ü—å–æ–≤—É—î —è–∫—â–æ –≤ —ñ–Ω–ø—É—Ç –≤–≤–æ–¥–∏–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é,
    // —è–∫—â–æ –∂ –ø—Ä–æ–≤–æ–¥–∏–º–æ –º–∞–Ω—ñ–ø—É–ª—è—Ü—ñ—ó –∑ –∫–Ω–æ–ø–∫–∞–º–∏, —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –Ω–µ –≤—ñ–¥–ø—Ä–∞—Ü—å–æ–≤—É—î

    const filtredUsers = useMemo(() => {
        console.log('üîç Filtering...');
        return users.filter(user =>
            user.name.toLowerCase().includes(searchName.toLowerCase())
        );
    }, [users, searchName]);

    // —Ü—è —Ñ—É–Ω–∫—Ü—ñ—è —Å–ø—Ä–∞—Ü—å–æ–≤—É—î —Ç—ñ–ª—å–∫–∏ –∫–æ–ª–∏ –≤–æ–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —ñ –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–æ —è–∫—â–æ –≤—ñ–¥–ø—Ä–∞—Ü—å–æ–≤—É—î —Ñ—ñ–ª—å—Ç—Ä –∞–±–æ –∫–Ω–æ–ø–∫–∞ –Ω–∞ –∫–ª—ñ–∫.
    const handleUserClick = useCallback((userName: string) => {
        alert(`–ö–ª—ñ–∫–Ω—É–ª–∏ –Ω–∞ ${userName}`);
    }, []);

    return (
        <div>
            <div></div>
            <div>
                <p>–ó–Ω–∞–π–¥–µ–Ω–æ: {filtredUsers.length}</p>
                {
                    filtredUsers.map(user => <UserComponent key={user.id} item={user} onClick={handleUserClick}/>)
                }
            </div>

        </div>
    );
};

export default memo(FiltredUsersComponent);
// –ü–æ–±–∞—á–∏–≤ —â–µ —Ç–∞–∫–∏–π —Å–ø–æ—Å—ñ–± –¥–æ–¥–∞–≤–∞–Ω–Ω—è memo, —Å–ø—Ä–æ–±—É–≤–∞–≤ —ñ —Ç–∞–∫. –ü—Ä–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏ —É UsersComponent,
// —Å–∞–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç FiltredUsersComponent –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–æ