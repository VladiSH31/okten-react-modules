import './UsersComponent.css'
import {useEffect, useState} from "react";
import type {IUser} from "../../models/IUser.ts";
import {getAllUsers} from "../../services/api.service.tsx";
import FiltredUsersComponent from "../filtred-users-component/FiltredUsersComponent.tsx";

const UsersComponent = () => {

    // –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —é–∑–µ—Ä—ñ–≤
    const [users, setUsers] = useState<IUser[]>([]);

    useEffect(() => {

        getAllUsers().then(value => {
            if (value) {
                console.log('üîÑ UsersList rendered')
                setUsers(value)
            } else {
                console.log('Users not found')
            }
        })
    }, []);

    // –ü–æ—à—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤

    const [searchName, setSearchName] = useState('')
    
    // –ö–Ω–æ–ø–∫–∞ –∫–ª—ñ–∫ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è

    const [clickCount, setClickCount] = useState(0)


    return (
        <div>
            <h1>–°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤</h1>
            <div>
                {/*–†–æ–±–∏–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ—à—É–∫—É –∑–∞ —ñ–º'—è–º*/}
                <label className="block text-sm font-semibold text-gray-800 mb-2">–ü–æ—à—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    <input className="w-80 px-4 py-3 bg-white border-2 border-gray-200 rounded-lg shadow-sm transition-all duration-200 focus:outline-none focus:ring-4 focus:ring-blue-100 focus:border-blue-500 hover:border-gray-300"
                           type="text" name="user" value={searchName} onChange={event => {
                    setSearchName(event.target.value)
                }}/></label>
            </div>
            <div>
                <p>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–ª—ñ–∫—ñ–≤: {clickCount}</p>
                <button className={'border'} onClick={() => {
                    setClickCount(clickCount + 1)
                }}>Click here</button>

            </div>
            {
                <FiltredUsersComponent users={users} searchName={searchName}/>
            }
        </div>
    );
};

export default UsersComponent;